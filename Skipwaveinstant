--// Fast Skip Wave + Popup Remover with Save + Optimized + Hide Hotkey (RightAlt)
local SETTINGS_FILE = "FastSkipWave_Settings.json"
local HttpService = game:GetService("HttpService")

--// Save/Load
local function SaveSettings(data)
    if writefile then
        writefile(SETTINGS_FILE, HttpService:JSONEncode(data))
    end
end

local function LoadSettings()
    if isfile and readfile and isfile(SETTINGS_FILE) then
        local ok, decoded = pcall(function()
            return HttpService:JSONDecode(readfile(SETTINGS_FILE))
        end)
        if ok and type(decoded) == "table" then
            return decoded
        end
    end
    return {autoskipfast = false, removepopup = false}
end

local settings = LoadSettings()

--// UI Setup
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local ToggleButton = Instance.new("TextButton")
local PopupButton = Instance.new("TextButton")
local MinimizeButton = Instance.new("TextButton")

local UserInputService = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos
local minimized = false
local hidden = false -- NEW

ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MainFrame.Size = UDim2.new(0, 200, 0, 150)
MainFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
MainFrame.Active = true

Title.Parent = MainFrame
Title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Text = "Fast Skip Wave"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 16

ToggleButton.Parent = MainFrame
ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ToggleButton.Position = UDim2.new(0.1, 0, 0.35, 0)
ToggleButton.Size = UDim2.new(0.8, 0, 0.2, 0)

PopupButton.Parent = MainFrame
PopupButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
PopupButton.Position = UDim2.new(0.1, 0, 0.65, 0)
PopupButton.Size = UDim2.new(0.8, 0, 0.2, 0)

MinimizeButton.Parent = MainFrame
MinimizeButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
MinimizeButton.Position = UDim2.new(0.9, -25, 0, 2)
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Text = "-"

--// Dragging
MainFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = MainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

MainFrame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		MainFrame.Position = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y
		)
	end
end)

--// Logic
getgenv().autoskipfast = settings.autoskipfast
getgenv().removepopup = settings.removepopup

local skipThread
local popupConnection

local function UpdateUI()
	if getgenv().autoskipfast then
		ToggleButton.Text = "Fast Skip: ON"
		ToggleButton.TextColor3 = Color3.fromRGB(0, 255, 0)
	else
		ToggleButton.Text = "Fast Skip: OFF"
		ToggleButton.TextColor3 = Color3.fromRGB(255, 0, 0)
	end

	if getgenv().removepopup then
		PopupButton.Text = "Remove Popup: ON"
		PopupButton.TextColor3 = Color3.fromRGB(0, 255, 0)
	else
		PopupButton.Text = "Remove Popup: OFF"
		PopupButton.TextColor3 = Color3.fromRGB(255, 0, 0)
	end
end

-- Skip Handler
local function StartSkip()
	if skipThread then return end
	skipThread = task.spawn(function()
		while getgenv().autoskipfast do
			pcall(function()
				game:GetService("ReplicatedStorage")
					.endpoints.client_to_server.vote_wave_skip:InvokeServer()
			end)
			task.wait(0.1)
		end
		skipThread = nil
	end)
end

-- Popup Handler
local function StartPopupRemover()
	if popupConnection then return end
	local PlayerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
	popupConnection = PlayerGui.DescendantAdded:Connect(function(obj)
		if getgenv().removepopup and obj:IsA("TextLabel") and string.find(obj.Text, "Attempting to vote too fast") then
			task.wait()
			if obj.Parent then obj.Parent:Destroy() end
		end
	end)
end

local function StopPopupRemover()
	if popupConnection then
		popupConnection:Disconnect()
		popupConnection = nil
	end
end

-- Button Clicks
ToggleButton.MouseButton1Click:Connect(function()
	getgenv().autoskipfast = not getgenv().autoskipfast
	if getgenv().autoskipfast then
		StartSkip()
	end
	UpdateUI()
	SaveSettings({autoskipfast = getgenv().autoskipfast, removepopup = getgenv().removepopup})
end)

PopupButton.MouseButton1Click:Connect(function()
	getgenv().removepopup = not getgenv().removepopup
	if getgenv().removepopup then
		StartPopupRemover()
	else
		StopPopupRemover()
	end
	UpdateUI()
	SaveSettings({autoskipfast = getgenv().autoskipfast, removepopup = getgenv().removepopup})
end)

-- Minimize
MinimizeButton.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		MainFrame.Size = UDim2.new(0, 200, 0, 30)
		ToggleButton.Visible = false
		PopupButton.Visible = false
		MinimizeButton.Text = "+"
	else
		MainFrame.Size = UDim2.new(0, 200, 0, 150)
		ToggleButton.Visible = true
		PopupButton.Visible = true
		MinimizeButton.Text = "-"
	end
end)

-- ðŸ”¥ Hide UI with Right Alt
UserInputService.InputBegan:Connect(function(input, gp)
	if not gp and input.KeyCode == Enum.KeyCode.RightAlt then
		hidden = not hidden
		MainFrame.Visible = not hidden
	end
end)

-- Auto-start based on saved settings
if getgenv().autoskipfast then StartSkip() end
if getgenv().removepopup then StartPopupRemover() end
UpdateUI()
